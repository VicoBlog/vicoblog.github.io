[{"title":"樱同学-新手指南","path":"/2024/08/07/VikyTutorial/","content":"本文旨在列举搭建个人站点的一些概念点，时刻翻阅了解其是什么，工作原理是什么。 Hexo 是什么？文档原文： Hexo 是一个快速、简洁且高效的博客框架。 Hexo 使用 Markdown（或其他标记语言）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 通俗理解：Hexo是一个框架，编辑Markdown语言编写文章，通过他的内部命令可以直接生成静态网站代码，静态网站代码可以部署到网络站点（如免费的Github Page），可远程网络访问。 Markdown 是什么？Markdown 是一种轻量级的标记语言，可用于在纯文本文档中添加格式化元素。文本内容存储在带有 .md 或 .markdown 扩展名的纯文本文件中 Markdown 语法基本语法： 扩展语法： Github Page是什么？GitHub Pages 是 GitHub 提供给用户用来展示个人或者项目主页的静态网页系统。也就是说我们可以把项目代码写好后上传 GitHub，然后利用 GitHub Pages 为这个项目生成一个静态页面，别人通过网址可以访问我们的页面。Github Pages 只能托管静态站点。 Github 是什么？GitHub 是全球知名的代码开源平台。可以上传自己的代码到平台进行托管。 Visual Studio Code 是什么？一款非常好用的文本编辑器。","categories":["教程"]},{"title":"Hexo快速开始","path":"/2024/08/07/Hexo快速开始/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. 快速开始创建文章1$ hexo new &quot;My New Post&quot; 在新建文章时，Hexo 会根据 scaffolds 文件夹内相对应的文件来建立文件。 1$ hexo new photo &quot;My Gallery&quot; 更多内容: Writing 启动服务12$ hexo server$ hexo s 更多内容: Server 生成静态文件12$ hexo generate$ hexo g 更多内容: Generating 部署到远程站点12$ hexo deploy$ hexo d 更多内容: Deployment 一键部署以下教学改编自 一键部署。 安装 hexo-deployer-git： 1$ npm i hexo-deployer-git --save 在 _config.yml 中添加以下配置（如果配置已经存在，请将其替换为如下）: 123456deploy: type: git repo: https://github.com/&lt;username&gt;/&lt;project&gt; # example, https://github.com/VicoBlog/vicoblog.github.io branch: main message: [提交信息] 执行 hexo clean &amp;&amp; hexo deploy 。浏览 username.github.io，检查你的网站能否运作。 使用 Markdown 嵌入图片hexo-renderer-marked 3.1.0 引入了一个新的选项，可以在 markdown 中嵌入图片。 安装hexo-renderer-marked： 1$ npm install hexo-renderer-marked --save 如需启用： 12345_config.ymlpost_asset_folder: truemarked: prependRoot: true postAsset: true 启用后，资源图片将会被自动解析为其对应文章的路径。 例如： image.jpg 位置为 &#x2F;2020&#x2F;01&#x2F;02&#x2F;foo&#x2F;image.jpg ，这表示它是 &#x2F;2020&#x2F;01&#x2F;02&#x2F;foo&#x2F; 文章的一张资源图片， ![image](image.jpg) 将会被解析为&lt;img src=&quot;/2020/01/02/foo/image.jpg&quot;&gt; 。","tags":["Hexo"],"categories":["教程"]},{"title":"Hexo教程","path":"/2024/08/06/Hexo教程/","content":"本文档介绍如何从零开始利用Hexo生成静态网站，并部署到Github Page中运行。 文档内容包括： 本地环境准备 创建Hexo项目 部署到Github Page 使用Gittalk评论 本地环境准备 Item Description 链接 Git Git是版本库管理工具，用于将Hexo代码托管到Github进行管理。 下载安装 NodeJs Nodejs是本地运行Hexo的运行库。注意Hexo兼容的Nodejs最高版本。 下载地址 Github账号 先在Github中注册一个账号，用于托管代码。 Github 创建Hexo项目 安装完Nodejs后，安装Hexo-cli： 1$ npm i -g hexo-cli 安装Hexo： 1$ npm i hexo Hexo安装完成后，使用init初始化创建本地Hexo项目1$ hexo init &lt;项目名称&gt; 使用主题： [1] 下载主题 [2] 将下载的主题文件夹拷贝到hexo项目themes目录下 [3] 在_config.yml配置文件中将theme修改为主题目录 部署到Github PageGithub Page创建在Github账号中创建一个仓库，名称为: [github账号用户名].github.io Hexo部署在Hexo项目目录下，打开cmd，执行build。 123$ hexo generate或 $ hexo g 在项目目录下就会生成publish文件夹，publish文件夹的内容就是静态网站，将这些内容上传到Github仓库 [github账号用户名].github.io， 就可以访问了。","tags":["Hexo","Github Page","Nodejs"],"categories":["教程"]}]